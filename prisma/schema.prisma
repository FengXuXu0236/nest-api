
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Merged Schemas


// =============================================
// From enums.prisma
// =============================================
enum PermissionType {
  MENU   // 菜单权限
  BUTTON // 按钮权限
  API    // API 权限
  COLUMN // 表格列权限
}


// =============================================
// From menu.prisma
// =============================================
model Menu {
  id          Int       @id @default(autoincrement())   // 菜单唯一标识
  name        String    @unique                         // 菜单名称，唯一
  description String?                                   // 菜单描述
  path        String    @unique                         // 菜单对应的路由路径
  parentId    Int?                                      // 父菜单 ID，支持菜单层级
  isDisabled  Boolean    @default(false)                // 是否禁用
  isDeleted   Boolean    @default(false)                // 是否删除
  disabledAt  DateTime?                                 // 菜单禁用时间
  createdAt   DateTime   @default(now())                // 菜单创建时间
  updatedAt   DateTime   @updatedAt                     // 菜单更新时间
  deletedAt   DateTime?                                 // 菜单删除时间
  permissions MenuPermission[]                          // 菜单的权限关联关系

  @@index([isDeleted])                                  // 索引 isDeleted 字段
  @@index([isDisabled])                                 // 索引 isDisabled 字段
}


// =============================================
// From menu_permission.prisma
// =============================================
model MenuPermission {
  id           Int       @id @default(autoincrement())                        // 菜单-权限关联表唯一标识
  menuId       Int                                                            // 菜单 ID
  permissionId Int                                                            // 权限 ID
  createdAt    DateTime  @default(now())                                      // 关联创建时间
  updatedAt    DateTime  @updatedAt                                           // 关联更新时间

  menu       Menu       @relation(fields: [menuId], references: [id])         // 菜单关联
  permission Permission @relation(fields: [permissionId], references: [id])   // 权限关联

  @@unique([menuId, permissionId])                                            // 复合唯一约束，防止重复关联
  @@map("menu_permission") // 使用原始表名
}


// =============================================
// From permission.prisma
// =============================================
model Permission {
  id          Int       @id @default(autoincrement())   // 权限唯一标识
  name        String    @unique                         // 权限名称，唯一
  description String?                                   // 权限描述
  type        PermissionType                            // 权限类型（菜单/按钮/API/列）
  resource    String                                    // 资源路径（如 API 路径或路由）
  isDisabled  Boolean    @default(false)                // 是否禁用
  isDeleted   Boolean    @default(false)                // 是否删除
  disabledAt  DateTime?                                 // 权限禁用时间
  createdAt   DateTime   @default(now())                // 权限创建时间
  updatedAt   DateTime   @updatedAt                     // 权限更新时间
  deletedAt   DateTime?                                 // 权限删除时间
  roles       RolePermission[]                          // 权限的角色关联关系
  menus       MenuPermission[]                          // 权限的菜单关联关系

  @@index([isDeleted])                                  // 索引 isDeleted 字段
  @@index([isDisabled])                                 // 索引 isDisabled 字段
}


// =============================================
// From role.prisma
// =============================================
model Role {
  id          Int          @id @default(autoincrement())  // 角色唯一标识
  name        String       @unique                        // 角色名称，唯一
  description String?                                     // 角色描述
  isDisabled  Boolean      @default(false)                // 是否禁用
  isDeleted   Boolean      @default(false)                // 是否删除
  disabledAt  DateTime?                                   // 角色禁用时间
  createdAt   DateTime     @default(now())                // 角色创建时间
  updatedAt   DateTime     @updatedAt                     // 角色更新时间
  deletedAt   DateTime?                                   // 角色删除时间
  permissions RolePermission[]                            // 角色的权限关联关系
  users       UserRole[]                                  // 角色的用户关联关系

  @@index([isDeleted])                                    // 索引 isDeleted 字段
  @@index([isDisabled])                                   // 索引 isDisabled 字段
}


// =============================================
// From role_permission.prisma
// =============================================
model RolePermission {
  id           Int       @id @default(autoincrement())                        // 角色-权限关联表唯一标识
  roleId       Int                                                            // 角色 ID
  permissionId Int                                                            // 权限 ID
  createdAt    DateTime  @default(now())                                      // 关联创建时间
  updatedAt    DateTime  @updatedAt                                           // 关联更新时间

  role       Role       @relation(fields: [roleId], references: [id])         // 角色关联
  permission Permission @relation(fields: [permissionId], references: [id])   // 权限关联

  @@unique([roleId, permissionId]) // 复合唯一约束，防止重复关联
  @@map("role_permission") // 使用原始表名
}


// =============================================
// From user.prisma
// =============================================
model User {
  id          Int       @id @default(autoincrement())   // 用户唯一标识
  username    String    @unique @default("")            // 用户名
  nickname    String    @default("")                    // 用户昵称
  email       String    @unique @default("")            // 邮箱地址
  fullName    String    @default("")                    // 用户真实姓名
  phoneNumber String    @default("")                    // 手机号码
  idCard      String    @default("")                    // 身份证号码
  password    String    @default("")                    // 加密的密码
  secretKey   String    @default("")                    // 用户秘钥
  avatarUrl   String    @default("")                    // 用户头像
  roles       String    @default("")                    // 用户的角色关联关系
  isActive    Boolean    @default(false)                // 是否激活
  isDeleted   Boolean    @default(false)                // 是否删除
  isDisabled  Boolean    @default(false)                // 是否禁用
  isFrozen    Boolean    @default(false)                // 是否冻结
  isSpecial   Boolean    @default(false)                // 是否标记为特殊用户
  isMuted     Boolean    @default(false)                // 是否禁言
  lastLogin   DateTime?                                 // 最后登录时间
  createdAt   DateTime   @default(now())                // 创建时间
  updatedAt   DateTime   @updatedAt                     // 最新修改时间
  activatedAt DateTime?                                 // 激活时间
  deletedAt   DateTime?                                 // 删除时间
  mutedAt     DateTime?                                 // 禁言时间
  disabledAt  DateTime?                                 // 禁用时间
  frozenAt    DateTime?                                 // 冻结时间
  specialAt   DateTime?                                 // 标记特殊时间

  userRoles UserRole[]  // 添加反向关系字段，关联 UserRole

  @@index([phoneNumber])    // 索引 isActive 字段
  @@index([isActive])    // 索引 isActive 字段
  @@index([isDeleted])   // 索引 isDeleted 字段
  @@index([isDisabled])  // 索引 isDisabled 字段
  @@index([isFrozen])    // 索引 isFrozen 字段
  @@index([isSpecial])   // 索引 isSpecial 字段
  @@index([isMuted])     // 索引 isMuted 字段
}


// =============================================
// From user_role.prisma
// =============================================
model UserRole {
  id        Int       @id @default(autoincrement())       // 用户-角色关联表唯一标识
  userId    Int                                           // 用户 ID
  roleId    Int                                           // 角色 ID
  createdAt DateTime  @default(now())                     // 关联创建时间
  updatedAt DateTime  @updatedAt                          // 关联更新时间

  user User @relation(fields: [userId], references: [id]) // 用户关联
  role Role @relation(fields: [roleId], references: [id]) // 角色关联

  @@unique([userId, roleId])
  @@map("user_role") // 使用原始表名// 复合唯一约束，防止重复关联
}

